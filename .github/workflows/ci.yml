name: Python CI

# Trigger the workflow on push and pull request events
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
  
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Sample: just print the Python version
    - name: Print Python version
      run:  echo "Hello this is the workflow demo for Python CI with multiple versions"

    # Step 2: Set up Python environment
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run code linting with flake8
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 5: Run tests with unittest
    - name: Run tests with unittest
      run: |
        python -m unittest test_app.py -v

    # Step 6: Run tests with pytest (alternative test runner)
    - name: Run tests with pytest
      run: |
        pytest test_app.py -v

    # Step 7: Test the main application
    - name: Test application execution
      run: |
        python app.py
